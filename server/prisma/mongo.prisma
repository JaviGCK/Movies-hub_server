// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "./generated/mongo_client"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGO_CLUSTER_URI")
}

model User {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String    @unique
  password  String
  movies    Movie[]
  createdAt DateTime  @default(now())
  updateAt  DateTime  @updatedAt
  Comment   Comment[]
}

model Movie {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  poster      String
  origin      String
  year        Int
  name        String
  score       Score[]
  genres      Genre[]
  description String
  createdAt   DateTime  @default(now())
  updateAt    DateTime  @updatedAt
  User        User?     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String?   @db.ObjectId
  Comment     Comment[]
}

model Score {
  id      String  @id @default(auto()) @map("_id") @db.ObjectId
  score   String
  Movie   Movie?  @relation(fields: [movieId], references: [id])
  movieId String? @db.ObjectId
}

model Genre {
  id      String  @id @default(auto()) @map("_id") @db.ObjectId
  name    String
  Movie   Movie?  @relation(fields: [movieId], references: [id], onDelete: Cascade)
  movieId String? @db.ObjectId
}

model Comment {
  id      String  @id @default(auto()) @map("_id") @db.ObjectId
  comment String
  Movie   Movie?  @relation(fields: [movieId], references: [id], onDelete: Cascade)
  User    User?   @relation(fields: [userId], references: [id], onDelete: Cascade)
  movieId String? @db.ObjectId
  userId  String? @db.ObjectId
}
